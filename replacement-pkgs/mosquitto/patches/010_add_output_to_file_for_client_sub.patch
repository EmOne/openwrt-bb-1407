--- a/client/client_shared.c
+++ b/client/client_shared.c
@@ -40,6 +40,7 @@ void init_config(struct mosq_config *cfg
 	cfg->port = 1883;
 	cfg->max_inflight = 20;
 	cfg->keepalive = 60;
+	cfg->output_to_file = false;
 	cfg->clean_session = true;
 	cfg->eol = true;
 	cfg->protocol_version = MQTT_PROTOCOL_V31;
@@ -59,6 +60,7 @@ void client_config_cleanup(struct mosq_c
 	free(cfg->password);
 	free(cfg->will_topic);
 	free(cfg->will_payload);
+	free(cfg->output_file);
 #ifdef WITH_TLS
 	free(cfg->cafile);
 	free(cfg->capath);
@@ -387,6 +389,16 @@ int client_config_line_proc(struct mosq_
 			}
 			i++;
 #endif
+		}else if(!strcmp(argv[i], "-O")){
+			if(i==argc-1){
+				fprintf(stderr, "Error: -O argument given but no file specified.\n\n");
+				print_usage();
+				return 1;
+			}else{
+				cfg->output_file = argv[i+1];
+				cfg->output_to_file = true;
+			}
+			i++;
 		}else if(!strcmp(argv[i], "-l") || !strcmp(argv[i], "--stdin-line")){
 			if(pub_or_sub == CLIENT_SUB){
 				goto unknown_option;
--- a/client/client_shared.h
+++ b/client/client_shared.h
@@ -33,6 +33,8 @@ Contributors:
 struct mosq_config {
 	char *id;
 	char *id_prefix;
+	char *output_file;
+	bool output_to_file;
 	int protocol_version;
 	int keepalive;
 	char *host;
--- a/client/sub_client.c
+++ b/client/sub_client.c
@@ -67,11 +67,19 @@ void my_message_callback(struct mosquitt
 		fflush(stdout);
 	}else{
 		if(message->payloadlen){
-			fwrite(message->payload, 1, message->payloadlen, stdout);
-			if(cfg->eol){
-				printf("\n");
+			if (cfg->output_to_file){
+				FILE *fptr = NULL;
+				fptr = fopen(cfg->output_file, "w+");
+				fwrite(message->payload, 1, message->payloadlen,fptr);
+				fclose(fptr);
+			}
+			else{
+				fwrite(message->payload, 1, message->payloadlen, stdout);
+				if(cfg->eol){
+					printf("\n");
+				}
+				fflush(stdout);
 			}
-			fflush(stdout);
 		}
 	}
 	if(cfg->msg_count>0){
@@ -131,6 +139,7 @@ void print_usage(void)
 	printf("mosquitto_sub version %s running on libmosquitto %d.%d.%d.\n\n", VERSION, major, minor, revision);
 	printf("Usage: mosquitto_sub [-c] [-h host] [-k keepalive] [-p port] [-q qos] [-R] -t topic ...\n");
 	printf("                     [-C msg_count] [-T filter_out]\n");
+	printf("                     [-O output_file]\n");
 #ifdef WITH_SRV
 	printf("                     [-A bind_address] [-S]\n");
 #else
@@ -160,6 +169,7 @@ void print_usage(void)
 	printf(" -i : id to use for this client. Defaults to mosquitto_sub_ appended with the process id.\n");
 	printf(" -I : define the client id as id_prefix appended with the process id. Useful for when the\n");
 	printf("      broker is using the clientid_prefixes option.\n");
+	printf(" -O : Send subscribe message to a output file\n");
 	printf(" -k : keep alive in seconds for this client. Defaults to 60.\n");
 	printf(" -N : do not add an end of line character when printing the payload.\n");
 	printf(" -p : network port to connect to. Defaults to 1883.\n");